<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<context:component-scan base-package="com.action,com.service,com.dao"></context:component-scan>
    
    <!-- 管理mybatis的session工厂 提供数据源  -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			    <property name="locations" value="classpath:db-config.properties"/>
			</bean>
			<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
				<property name="driverClassName" value="${driver}"></property>
				<property name="url" value="${url}"></property>
				<property name="username" value="${username}"></property>
				<property name="password" value="${password}"></property>
				<property name="maxActive" value="${maxTotal}"></property>
			</bean>
			<bean name="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
				<property name="dataSource" ref="dataSource"></property>
				<property name="configLocation" value="classpath:configuration.xml"></property>
			</bean>
			
			<!--  声明式事务 -->
			<bean id="manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
				<property name="dataSource" ref="dataSource"></property>
			</bean>
			
		   
			<tx:annotation-driven transaction-manager="manager" />
			
			<!-- 可以使用注解来实现声明式事务的策略
			<tx:advice transaction-manager="manager" id="txAdvice">
				<tx:attributes>
					<tx:method name="save*" propagation="REQUIRED" isolation="SERIALIZABLE" rollback-for="java.lang.Exception"/>
					<tx:method name="delete*" propagation="REQUIRED" isolation="SERIALIZABLE" rollback-for="java.lang.Exception"/>
					<tx:method name="update**" propagation="REQUIRED" isolation="SERIALIZABLE" rollback-for="java.lang.Exception"/>
					<tx:method name="batch*" propagation="REQUIRED" isolation="SERIALIZABLE" rollback-for="java.lang.Exception"/>
					<tx:method name="*" read-only="true"/>
				</tx:attributes>
			</tx:advice>
			<aop:config>
				<aop:advisor advice-ref="txAdvice" pointcut="execution(* com.service.impl.*.*(..))"/>
			</aop:config>
			 -->

</beans>